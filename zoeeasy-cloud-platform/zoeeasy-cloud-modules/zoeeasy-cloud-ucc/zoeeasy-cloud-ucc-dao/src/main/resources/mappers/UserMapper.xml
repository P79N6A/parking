<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoeeasy.cloud.ucc.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zoeeasy.cloud.ucc.domain.UserEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tenantId" property="tenantId" jdbcType="BIGINT"/>
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="realName" property="realName" jdbcType="VARCHAR"/>
        <result column="nickName" property="nickName" jdbcType="VARCHAR"/>
        <result column="userType" property="userType" jdbcType="TINYINT"/>
        <result column="adminUser" property="adminUser" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="registerChannel" property="registerChannel" jdbcType="TINYINT"/>
        <result column="phoneNumber" property="phoneNumber" jdbcType="BIGINT"/>
        <result column="phoneNumberConfirmed" property="phoneNumberConfirmed" jdbcType="TINYINT"/>
        <result column="emailAddress" property="emailAddress" jdbcType="VARCHAR"/>
        <result column="emailAddressConfirmed" property="emailAddressConfirmed" jdbcType="TINYINT"/>
        <result column="emailConfirmationCode" property="emailConfirmationCode" jdbcType="VARCHAR"/>
        <result column="portrait" property="portrait" jdbcType="VARCHAR"/>
        <result column="accessAttemptCount" property="accessAttemptCount" jdbcType="INTEGER"/>
        <result column="passwordResetCode" property="passwordResetCode" jdbcType="VARCHAR"/>
        <result column="creatorUserId" property="creatorUserId" jdbcType="BIGINT"/>
        <result column="creationTime" property="creationTime" jdbcType="TIMESTAMP"/>
        <result column="lastModifierUserId" property="lastModifierUserId" jdbcType="BIGINT"/>
        <result column="lastModificationTime" property="lastModificationTime" jdbcType="TIMESTAMP"/>
        <result column="deleterUserId" property="deleterUserId" jdbcType="BIGINT"/>
        <result column="deletionTime" property="deletionTime" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
<![CDATA[
        t.id,
        t.uuid,
        t.tenantId,
        t.account,
        t.password,
        t.salt,
        t.userName,
        t.realName,
        t.nickName,
        t.userType,
        t.adminUser,
        t.status,
        t.registerChannel,
        t.phoneNumber,
        t.phoneNumberConfirmed,
        t.emailAddress,
        t.emailAddressConfirmed,
        t.emailConfirmationCode,
        t.portrait,
        t.accessAttemptCount,
        t.passwordResetCode,
        t.lastLoginTime,
        t.creatorUserId,
        t.creationTime,
        t.lastModifierUserId,
        t.lastModificationTime,
        t.deleterUserId,
        t.deletionTime,
        t.deleted

        ]]>
    </sql>
    <!-- 通过租户和账号查找租户用户 -->
    <select id="findTenantUserByAccount" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ucc_user t
        WHERE t.tenantId= #{tenantId}
        AND t.account = #{account} and t.deleted= '0'
    </select>
    <!-- 通过账号查找宿主用户 -->
    <select id="findUserByAccount" resultMap="BaseResultMap">
        SELECT DISTINCT
        <include refid="Base_Column_List"/>
        FROM ucc_user t
        WHERE t.account = #{account} and t.deleted= 0
    </select>
    <select id="findByUserId" resultMap="BaseResultMap">
        SELECT DISTINCT
        <include refid="Base_Column_List"/>
        FROM ucc_user t
        <where>
            t.id = #{userId} and t.deleted= 0
        </where>
    </select>
    <!-- updatePassword -->
    <update id="updatePassword">
        UPDATE ucc_user
        <trim prefix="SET" prefixOverrides=",">
            <if test="null!=password and ''!=password">,password=#{password}</if>
            <if test="null!=salt and ''!=salt">,salt=#{salt}</if>
        </trim>
        WHERE tenantId=#{tenantId} AND id=#{userId} AND deleted= 0
    </update>
</mapper>