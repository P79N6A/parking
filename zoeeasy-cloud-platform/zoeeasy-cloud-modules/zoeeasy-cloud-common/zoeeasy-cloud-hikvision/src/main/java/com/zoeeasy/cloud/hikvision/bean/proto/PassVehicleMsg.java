// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: passVehicle.proto

package com.zoeeasy.cloud.hikvision.bean.proto;

public final class PassVehicleMsg {
  private PassVehicleMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PassVehicleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PassVehicle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    boolean hasParkCode();
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    java.lang.String getParkCode();
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    com.google.protobuf.ByteString
        getParkCodeBytes();

    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    boolean hasGateCode();
    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    java.lang.String getGateCode();
    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    com.google.protobuf.ByteString
        getGateCodeBytes();

    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    boolean hasLaneNo();
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    java.lang.String getLaneNo();
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    com.google.protobuf.ByteString
        getLaneNoBytes();

    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    boolean hasPlateNo();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    java.lang.String getPlateNo();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    com.google.protobuf.ByteString
        getPlateNoBytes();

    /**
     * <pre>
     *车牌颜色
     * </pre>
     *
     * <code>optional int32 plateColor = 6;</code>
     */
    boolean hasPlateColor();
    /**
     * <pre>
     *车牌颜色
     * </pre>
     *
     * <code>optional int32 plateColor = 6;</code>
     */
    int getPlateColor();

    /**
     * <pre>
     *车牌类型
     * </pre>
     *
     * <code>optional int32 plateType = 7;</code>
     */
    boolean hasPlateType();
    /**
     * <pre>
     *车牌类型
     * </pre>
     *
     * <code>optional int32 plateType = 7;</code>
     */
    int getPlateType();

    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    boolean hasPassTime();
    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    java.lang.String getPassTime();
    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    com.google.protobuf.ByteString
        getPassTimeBytes();

    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    boolean hasCarType();
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    int getCarType();

    /**
     * <pre>
     *停车类型，0-固定车，1-临时车
     * </pre>
     *
     * <code>optional int32 parkType = 10;</code>
     */
    boolean hasParkType();
    /**
     * <pre>
     *停车类型，0-固定车，1-临时车
     * </pre>
     *
     * <code>optional int32 parkType = 10;</code>
     */
    int getParkType();

    /**
     * <pre>
     *过车方向
     * </pre>
     *
     * <code>required int32 direct = 11;</code>
     */
    boolean hasDirect();
    /**
     * <pre>
     *过车方向
     * </pre>
     *
     * <code>required int32 direct = 11;</code>
     */
    int getDirect();

    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    boolean hasBerthCode();
    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    java.lang.String getBerthCode();
    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    com.google.protobuf.ByteString
        getBerthCodeBytes();
  }
  /**
   * Protobuf type {@code PassVehicle}
   */
  public  static final class PassVehicle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PassVehicle)
      PassVehicleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PassVehicle.newBuilder() to construct.
    private PassVehicle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PassVehicle() {
      uuid_ = "";
      parkCode_ = "";
      gateCode_ = "";
      laneNo_ = "";
      plateNo_ = "";
      plateColor_ = 0;
      plateType_ = 0;
      passTime_ = "";
      carType_ = 0;
      parkType_ = 0;
      direct_ = 0;
      berthCode_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PassVehicle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              uuid_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              parkCode_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              gateCode_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              laneNo_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              plateNo_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              plateColor_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              plateType_ = input.readInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              passTime_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              carType_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              parkType_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              direct_ = input.readInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              berthCode_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PassVehicleMsg.internal_static_PassVehicle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PassVehicleMsg.internal_static_PassVehicle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PassVehicleMsg.PassVehicle.class, PassVehicleMsg.PassVehicle.Builder.class);
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *过车记录
     * </pre>
     *
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARKCODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object parkCode_;
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    public boolean hasParkCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    public java.lang.String getParkCode() {
      java.lang.Object ref = parkCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parkCode_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required string parkCode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParkCodeBytes() {
      java.lang.Object ref = parkCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parkCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GATECODE_FIELD_NUMBER = 3;
    private volatile java.lang.Object gateCode_;
    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    public boolean hasGateCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    public java.lang.String getGateCode() {
      java.lang.Object ref = gateCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gateCode_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *出入口编号
     * </pre>
     *
     * <code>optional string gateCode = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGateCodeBytes() {
      java.lang.Object ref = gateCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gateCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANENO_FIELD_NUMBER = 4;
    private volatile java.lang.Object laneNo_;
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    public boolean hasLaneNo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    public java.lang.String getLaneNo() {
      java.lang.Object ref = laneNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          laneNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>optional string laneNo = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLaneNoBytes() {
      java.lang.Object ref = laneNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        laneNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATENO_FIELD_NUMBER = 5;
    private volatile java.lang.Object plateNo_;
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    public boolean hasPlateNo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    public java.lang.String getPlateNo() {
      java.lang.Object ref = plateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          plateNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string plateNo = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPlateNoBytes() {
      java.lang.Object ref = plateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATECOLOR_FIELD_NUMBER = 6;
    private int plateColor_;
    /**
     * <pre>
     *车牌颜色
     * </pre>
     *
     * <code>optional int32 plateColor = 6;</code>
     */
    public boolean hasPlateColor() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *车牌颜色
     * </pre>
     *
     * <code>optional int32 plateColor = 6;</code>
     */
    public int getPlateColor() {
      return plateColor_;
    }

    public static final int PLATETYPE_FIELD_NUMBER = 7;
    private int plateType_;
    /**
     * <pre>
     *车牌类型
     * </pre>
     *
     * <code>optional int32 plateType = 7;</code>
     */
    public boolean hasPlateType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *车牌类型
     * </pre>
     *
     * <code>optional int32 plateType = 7;</code>
     */
    public int getPlateType() {
      return plateType_;
    }

    public static final int PASSTIME_FIELD_NUMBER = 8;
    private volatile java.lang.Object passTime_;
    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    public boolean hasPassTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    public java.lang.String getPassTime() {
      java.lang.Object ref = passTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          passTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *通过时间 yyyy-MM-dd HH:mm:ss
     * </pre>
     *
     * <code>required string passTime = 8;</code>
     */
    public com.google.protobuf.ByteString
        getPassTimeBytes() {
      java.lang.Object ref = passTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARTYPE_FIELD_NUMBER = 9;
    private int carType_;
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    public boolean hasCarType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    public int getCarType() {
      return carType_;
    }

    public static final int PARKTYPE_FIELD_NUMBER = 10;
    private int parkType_;
    /**
     * <pre>
     *停车类型，0-固定车，1-临时车
     * </pre>
     *
     * <code>optional int32 parkType = 10;</code>
     */
    public boolean hasParkType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *停车类型，0-固定车，1-临时车
     * </pre>
     *
     * <code>optional int32 parkType = 10;</code>
     */
    public int getParkType() {
      return parkType_;
    }

    public static final int DIRECT_FIELD_NUMBER = 11;
    private int direct_;
    /**
     * <pre>
     *过车方向
     * </pre>
     *
     * <code>required int32 direct = 11;</code>
     */
    public boolean hasDirect() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *过车方向
     * </pre>
     *
     * <code>required int32 direct = 11;</code>
     */
    public int getDirect() {
      return direct_;
    }

    public static final int BERTHCODE_FIELD_NUMBER = 12;
    private volatile java.lang.Object berthCode_;
    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    public boolean hasBerthCode() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    public java.lang.String getBerthCode() {
      java.lang.Object ref = berthCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          berthCode_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *泊位编号
     * </pre>
     *
     * <code>required string berthCode = 12;</code>
     */
    public com.google.protobuf.ByteString
        getBerthCodeBytes() {
      java.lang.Object ref = berthCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        berthCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasParkCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlateNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDirect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBerthCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, parkCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gateCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, laneNo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, plateNo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, plateColor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, plateType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, passTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, carType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, parkType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, direct_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, berthCode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, parkCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gateCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, laneNo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, plateNo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, plateColor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, plateType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, passTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, carType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, parkType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, direct_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, berthCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PassVehicleMsg.PassVehicle)) {
        return super.equals(obj);
      }
      PassVehicleMsg.PassVehicle other = (PassVehicleMsg.PassVehicle) obj;

      boolean result = true;
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result && (hasParkCode() == other.hasParkCode());
      if (hasParkCode()) {
        result = result && getParkCode()
            .equals(other.getParkCode());
      }
      result = result && (hasGateCode() == other.hasGateCode());
      if (hasGateCode()) {
        result = result && getGateCode()
            .equals(other.getGateCode());
      }
      result = result && (hasLaneNo() == other.hasLaneNo());
      if (hasLaneNo()) {
        result = result && getLaneNo()
            .equals(other.getLaneNo());
      }
      result = result && (hasPlateNo() == other.hasPlateNo());
      if (hasPlateNo()) {
        result = result && getPlateNo()
            .equals(other.getPlateNo());
      }
      result = result && (hasPlateColor() == other.hasPlateColor());
      if (hasPlateColor()) {
        result = result && (getPlateColor()
            == other.getPlateColor());
      }
      result = result && (hasPlateType() == other.hasPlateType());
      if (hasPlateType()) {
        result = result && (getPlateType()
            == other.getPlateType());
      }
      result = result && (hasPassTime() == other.hasPassTime());
      if (hasPassTime()) {
        result = result && getPassTime()
            .equals(other.getPassTime());
      }
      result = result && (hasCarType() == other.hasCarType());
      if (hasCarType()) {
        result = result && (getCarType()
            == other.getCarType());
      }
      result = result && (hasParkType() == other.hasParkType());
      if (hasParkType()) {
        result = result && (getParkType()
            == other.getParkType());
      }
      result = result && (hasDirect() == other.hasDirect());
      if (hasDirect()) {
        result = result && (getDirect()
            == other.getDirect());
      }
      result = result && (hasBerthCode() == other.hasBerthCode());
      if (hasBerthCode()) {
        result = result && getBerthCode()
            .equals(other.getBerthCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasParkCode()) {
        hash = (37 * hash) + PARKCODE_FIELD_NUMBER;
        hash = (53 * hash) + getParkCode().hashCode();
      }
      if (hasGateCode()) {
        hash = (37 * hash) + GATECODE_FIELD_NUMBER;
        hash = (53 * hash) + getGateCode().hashCode();
      }
      if (hasLaneNo()) {
        hash = (37 * hash) + LANENO_FIELD_NUMBER;
        hash = (53 * hash) + getLaneNo().hashCode();
      }
      if (hasPlateNo()) {
        hash = (37 * hash) + PLATENO_FIELD_NUMBER;
        hash = (53 * hash) + getPlateNo().hashCode();
      }
      if (hasPlateColor()) {
        hash = (37 * hash) + PLATECOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getPlateColor();
      }
      if (hasPlateType()) {
        hash = (37 * hash) + PLATETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPlateType();
      }
      if (hasPassTime()) {
        hash = (37 * hash) + PASSTIME_FIELD_NUMBER;
        hash = (53 * hash) + getPassTime().hashCode();
      }
      if (hasCarType()) {
        hash = (37 * hash) + CARTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCarType();
      }
      if (hasParkType()) {
        hash = (37 * hash) + PARKTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getParkType();
      }
      if (hasDirect()) {
        hash = (37 * hash) + DIRECT_FIELD_NUMBER;
        hash = (53 * hash) + getDirect();
      }
      if (hasBerthCode()) {
        hash = (37 * hash) + BERTHCODE_FIELD_NUMBER;
        hash = (53 * hash) + getBerthCode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PassVehicleMsg.PassVehicle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PassVehicleMsg.PassVehicle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PassVehicleMsg.PassVehicle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PassVehicleMsg.PassVehicle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PassVehicleMsg.PassVehicle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PassVehicle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PassVehicle)
        PassVehicleMsg.PassVehicleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PassVehicleMsg.internal_static_PassVehicle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PassVehicleMsg.internal_static_PassVehicle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PassVehicleMsg.PassVehicle.class, PassVehicleMsg.PassVehicle.Builder.class);
      }

      // Construct using com.zhuyitech.parking.pms.hikvision.bean.proto.PassVehicleMsg.PassVehicle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        parkCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        gateCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        laneNo_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        plateNo_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        plateColor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        plateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        passTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        carType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        parkType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        direct_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        berthCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PassVehicleMsg.internal_static_PassVehicle_descriptor;
      }

      @java.lang.Override
      public PassVehicleMsg.PassVehicle getDefaultInstanceForType() {
        return PassVehicleMsg.PassVehicle.getDefaultInstance();
      }

      @java.lang.Override
      public PassVehicleMsg.PassVehicle build() {
        PassVehicleMsg.PassVehicle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public PassVehicleMsg.PassVehicle buildPartial() {
        PassVehicleMsg.PassVehicle result = new PassVehicleMsg.PassVehicle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.parkCode_ = parkCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gateCode_ = gateCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.laneNo_ = laneNo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.plateNo_ = plateNo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.plateColor_ = plateColor_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.plateType_ = plateType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.passTime_ = passTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.carType_ = carType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.parkType_ = parkType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.direct_ = direct_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.berthCode_ = berthCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PassVehicleMsg.PassVehicle) {
          return mergeFrom((PassVehicleMsg.PassVehicle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PassVehicleMsg.PassVehicle other) {
        if (other == PassVehicleMsg.PassVehicle.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasParkCode()) {
          bitField0_ |= 0x00000002;
          parkCode_ = other.parkCode_;
          onChanged();
        }
        if (other.hasGateCode()) {
          bitField0_ |= 0x00000004;
          gateCode_ = other.gateCode_;
          onChanged();
        }
        if (other.hasLaneNo()) {
          bitField0_ |= 0x00000008;
          laneNo_ = other.laneNo_;
          onChanged();
        }
        if (other.hasPlateNo()) {
          bitField0_ |= 0x00000010;
          plateNo_ = other.plateNo_;
          onChanged();
        }
        if (other.hasPlateColor()) {
          setPlateColor(other.getPlateColor());
        }
        if (other.hasPlateType()) {
          setPlateType(other.getPlateType());
        }
        if (other.hasPassTime()) {
          bitField0_ |= 0x00000080;
          passTime_ = other.passTime_;
          onChanged();
        }
        if (other.hasCarType()) {
          setCarType(other.getCarType());
        }
        if (other.hasParkType()) {
          setParkType(other.getParkType());
        }
        if (other.hasDirect()) {
          setDirect(other.getDirect());
        }
        if (other.hasBerthCode()) {
          bitField0_ |= 0x00000800;
          berthCode_ = other.berthCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasUuid()) {
          return false;
        }
        if (!hasParkCode()) {
          return false;
        }
        if (!hasPlateNo()) {
          return false;
        }
        if (!hasPassTime()) {
          return false;
        }
        if (!hasCarType()) {
          return false;
        }
        if (!hasDirect()) {
          return false;
        }
        if (!hasBerthCode()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PassVehicleMsg.PassVehicle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PassVehicleMsg.PassVehicle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *过车记录
       * </pre>
       *
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parkCode_ = "";
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public boolean hasParkCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public java.lang.String getParkCode() {
        java.lang.Object ref = parkCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parkCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParkCodeBytes() {
        java.lang.Object ref = parkCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parkCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public Builder setParkCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        parkCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public Builder clearParkCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        parkCode_ = getDefaultInstance().getParkCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required string parkCode = 2;</code>
       */
      public Builder setParkCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        parkCode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gateCode_ = "";
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public boolean hasGateCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public java.lang.String getGateCode() {
        java.lang.Object ref = gateCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gateCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGateCodeBytes() {
        java.lang.Object ref = gateCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gateCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public Builder setGateCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        gateCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public Builder clearGateCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gateCode_ = getDefaultInstance().getGateCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出入口编号
       * </pre>
       *
       * <code>optional string gateCode = 3;</code>
       */
      public Builder setGateCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        gateCode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object laneNo_ = "";
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public boolean hasLaneNo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public java.lang.String getLaneNo() {
        java.lang.Object ref = laneNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            laneNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLaneNoBytes() {
        java.lang.Object ref = laneNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          laneNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public Builder setLaneNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        laneNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public Builder clearLaneNo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        laneNo_ = getDefaultInstance().getLaneNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>optional string laneNo = 4;</code>
       */
      public Builder setLaneNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        laneNo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plateNo_ = "";
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public boolean hasPlateNo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public java.lang.String getPlateNo() {
        java.lang.Object ref = plateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            plateNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPlateNoBytes() {
        java.lang.Object ref = plateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public Builder setPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        plateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public Builder clearPlateNo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        plateNo_ = getDefaultInstance().getPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string plateNo = 5;</code>
       */
      public Builder setPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        plateNo_ = value;
        onChanged();
        return this;
      }

      private int plateColor_ ;
      /**
       * <pre>
       *车牌颜色
       * </pre>
       *
       * <code>optional int32 plateColor = 6;</code>
       */
      public boolean hasPlateColor() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *车牌颜色
       * </pre>
       *
       * <code>optional int32 plateColor = 6;</code>
       */
      public int getPlateColor() {
        return plateColor_;
      }
      /**
       * <pre>
       *车牌颜色
       * </pre>
       *
       * <code>optional int32 plateColor = 6;</code>
       */
      public Builder setPlateColor(int value) {
        bitField0_ |= 0x00000020;
        plateColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌颜色
       * </pre>
       *
       * <code>optional int32 plateColor = 6;</code>
       */
      public Builder clearPlateColor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        plateColor_ = 0;
        onChanged();
        return this;
      }

      private int plateType_ ;
      /**
       * <pre>
       *车牌类型
       * </pre>
       *
       * <code>optional int32 plateType = 7;</code>
       */
      public boolean hasPlateType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *车牌类型
       * </pre>
       *
       * <code>optional int32 plateType = 7;</code>
       */
      public int getPlateType() {
        return plateType_;
      }
      /**
       * <pre>
       *车牌类型
       * </pre>
       *
       * <code>optional int32 plateType = 7;</code>
       */
      public Builder setPlateType(int value) {
        bitField0_ |= 0x00000040;
        plateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌类型
       * </pre>
       *
       * <code>optional int32 plateType = 7;</code>
       */
      public Builder clearPlateType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        plateType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object passTime_ = "";
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public boolean hasPassTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public java.lang.String getPassTime() {
        java.lang.Object ref = passTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            passTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public com.google.protobuf.ByteString
          getPassTimeBytes() {
        java.lang.Object ref = passTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public Builder setPassTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        passTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public Builder clearPassTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        passTime_ = getDefaultInstance().getPassTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通过时间 yyyy-MM-dd HH:mm:ss
       * </pre>
       *
       * <code>required string passTime = 8;</code>
       */
      public Builder setPassTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        passTime_ = value;
        onChanged();
        return this;
      }

      private int carType_ ;
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public boolean hasCarType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public int getCarType() {
        return carType_;
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public Builder setCarType(int value) {
        bitField0_ |= 0x00000100;
        carType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public Builder clearCarType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        carType_ = 0;
        onChanged();
        return this;
      }

      private int parkType_ ;
      /**
       * <pre>
       *停车类型，0-固定车，1-临时车
       * </pre>
       *
       * <code>optional int32 parkType = 10;</code>
       */
      public boolean hasParkType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *停车类型，0-固定车，1-临时车
       * </pre>
       *
       * <code>optional int32 parkType = 10;</code>
       */
      public int getParkType() {
        return parkType_;
      }
      /**
       * <pre>
       *停车类型，0-固定车，1-临时车
       * </pre>
       *
       * <code>optional int32 parkType = 10;</code>
       */
      public Builder setParkType(int value) {
        bitField0_ |= 0x00000200;
        parkType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *停车类型，0-固定车，1-临时车
       * </pre>
       *
       * <code>optional int32 parkType = 10;</code>
       */
      public Builder clearParkType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        parkType_ = 0;
        onChanged();
        return this;
      }

      private int direct_ ;
      /**
       * <pre>
       *过车方向
       * </pre>
       *
       * <code>required int32 direct = 11;</code>
       */
      public boolean hasDirect() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *过车方向
       * </pre>
       *
       * <code>required int32 direct = 11;</code>
       */
      public int getDirect() {
        return direct_;
      }
      /**
       * <pre>
       *过车方向
       * </pre>
       *
       * <code>required int32 direct = 11;</code>
       */
      public Builder setDirect(int value) {
        bitField0_ |= 0x00000400;
        direct_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *过车方向
       * </pre>
       *
       * <code>required int32 direct = 11;</code>
       */
      public Builder clearDirect() {
        bitField0_ = (bitField0_ & ~0x00000400);
        direct_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object berthCode_ = "";
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public boolean hasBerthCode() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public java.lang.String getBerthCode() {
        java.lang.Object ref = berthCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            berthCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public com.google.protobuf.ByteString
          getBerthCodeBytes() {
        java.lang.Object ref = berthCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          berthCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public Builder setBerthCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        berthCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public Builder clearBerthCode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        berthCode_ = getDefaultInstance().getBerthCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *泊位编号
       * </pre>
       *
       * <code>required string berthCode = 12;</code>
       */
      public Builder setBerthCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        berthCode_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PassVehicle)
    }

    // @@protoc_insertion_point(class_scope:PassVehicle)
    private static final PassVehicleMsg.PassVehicle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PassVehicleMsg.PassVehicle();
    }

    public static PassVehicleMsg.PassVehicle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PassVehicle>
        PARSER = new com.google.protobuf.AbstractParser<PassVehicle>() {
      @java.lang.Override
      public PassVehicle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassVehicle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PassVehicle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PassVehicle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public PassVehicleMsg.PassVehicle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PassVehicle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PassVehicle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021passVehicle.proto\"\337\001\n\013PassVehicle\022\014\n\004u" +
      "uid\030\001 \002(\t\022\020\n\010parkCode\030\002 \002(\t\022\020\n\010gateCode\030" +
      "\003 \001(\t\022\016\n\006laneNo\030\004 \001(\t\022\017\n\007plateNo\030\005 \002(\t\022\022" +
      "\n\nplateColor\030\006 \001(\005\022\021\n\tplateType\030\007 \001(\005\022\020\n" +
      "\010passTime\030\010 \002(\t\022\017\n\007carType\030\t \002(\005\022\020\n\010park" +
      "Type\030\n \001(\005\022\016\n\006direct\030\013 \002(\005\022\021\n\tberthCode\030" +
      "\014 \002(\tB@\n.com.zhuyitech.parking.pms.hikvi" +
      "sion.bean.protoB\016PassVehicleMsg"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_PassVehicle_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PassVehicle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PassVehicle_descriptor,
        new java.lang.String[] { "Uuid", "ParkCode", "GateCode", "LaneNo", "PlateNo", "PlateColor", "PlateType", "PassTime", "CarType", "ParkType", "Direct", "BerthCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
